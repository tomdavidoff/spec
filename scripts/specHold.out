
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # specHold.R 
> # how long to spec builders hold properties?
> # Also, when do they buy?
> # Tom Davidoff
> # 06/04/25
> 
> # strategy: find last sale before year built for single family homes
> # consider doing for all teardowns class of 2016, but see how long hold is first
> # do this for each metro area
> 
> library(data.table)
> library(fixest)	
> library(RSQLite)
> library(ggplot2)
> 
> # get dates of construction for single family homes 
> # see if roll number ends in zero and no other by lot start works
> 
> DOCOMPILE <- FALSE
> 
> if (DOCOMPILE==TRUE) {
+ 	dd25 <- fread("~/OneDrive\ -\ UBC/Documents/data/bca/data_advice_REVD25_20250331/bca_folio_descriptions_20250331_REVD25.csv",select=c("JURISDICTION_CODE","ROLL_NUMBER","FOLIO_ID","ACTUAL_USE_DESCRIPTION","REGIONAL_DISTRICT"),colClasses=c(ROLL_NUMBER="character"))
+ 	dj25 <- unique(dd25[,.(JURISDICTION_CODE,ROLL_NUMBER,FOLIO_ID)]) # for sales data uniformity
+ 	names(dj25) <- c("JURISDICTION_CODE","ROLL_NUMBER","FOLIO_ID")
+ 
+ 	diri <- "~/OneDrive - UBC/Documents/data/bca/Residential_inventory_202501/"
+ 	dirf <- list.files(diri)
+ 
+ 	di25 <- data.table(Jurisdiction=numeric(),Roll_Number=character(),MB_Year_Built=numeric())
+ 	for (f in paste0(diri,dirf)) {
+ 		d <- fread(f,select=c("Jurisdiction","Roll_Number","MB_Year_Built"),colClasses=c(Roll_Number="character",Jurisdiction="numeric") )
+ 		di25 <- rbind(di25,d)
+ 	}
+ 	di25 <- di25[!is.na(MB_Year_Built)]
+ 	# to date 20250312000000
+ 
+ 	d25 <- merge(dd25,di25,by.x=c("JURISDICTION_CODE","ROLL_NUMBER"),by.y=c("Jurisdiction","Roll_Number"))
+ 	print(summary(d25))
+ 
+ 	ds25 <- fread("~/OneDrive - UBC/Documents/data/bca/data_advice_REVD25_20250331/bca_folio_sales_20250331_REVD25.csv",select=c("FOLIO_ID","CONVEYANCE_DATE","CONVEYANCE_PRICE","CONVEYANCE_TYPE_DESCRIPTION"),colClasses=c(CONVEYANCE_DATE="character"))
+ 	# convert folioID to jurisdiction/roll_number as pre-redevelopment sales will have often same jurisd/roll_number, different FOLIO_ID. Certainly same rollStart
+ 	ds25[,CONVEYANCE_DATE:=as.Date(CONVEYANCE_DATE,format="%Y%m%d%H%M%S")]
+ 	ds25 <- merge(ds25,dj25,by="FOLIO_ID") # add jurisdiction code and roll number
+ 
+ 	# get sales data from 2016 to maximize chain of sales
+ 	# open an sqlite connection to ~/docs/data/bca/REVD16_and_inventory_extracts.sqlite3
+ 
+ 	# get only single family lots as of 2016
+ 	db16 <- dbConnect(RSQLite::SQLite(), "~/OneDrive - UBC/Documents/data/bca/REVD16_and_inventory_extracts.sqlite3")
+ 	df16 <- dbGetQuery(db16, "SELECT folioID, jurisdictionCode, rollNumber FROM folio") 
+ 	du16 <- dbGetQuery(db16, "SELECT folioID FROM folioDescription WHERE actualUseDescription IN ('Single Family Dwelling','Residential Dwelling with Suite')") #1.	“Single Family Dwelling” and “Residential Dwelling with Suite” are almost certainly SFHs. from ChatGPT, and is right_use
+ 	du16 <- data.table(du16) # convert to data.table
+ 	names(du16) <- "folioID" # rename to folioID
+ 	df16 <- data.table(merge(df16,du16,by="folioID")) # keep only the valid single family
+ 	# verify last digit of roll number is always zero, and only one observation per rollStart
+ 	df16[,rollStart:=substring(rollNumber,1,nchar(rollNumber)-1)]
+ 	print(summary(df16[,.N,by=rollStart]))
+ 	# now the last digit thing
+ 	df16[,lastDigit:=substring(rollNumber,nchar(rollNumber),nchar(rollNumber))]
+ 	print(table(df16[,lastDigit])) # not true always 1
+ 	df16[,lastDigit:=NULL]
+ 	df16[,ner:=.N,by=c("rollStart","jurisdictionCode")] 
+ 	print(df16[ner>1]) # these seem to be luxury
+ 	print(table(df16[,ner]))
+ 	df16 <- df16[ner==1]
+ 	df16[,ner:=NULL] # drop count
+ 	ds16 <- dbGetQuery(db16, "SELECT folioID, conveyanceDate, conveyancePrice, conveyanceTypeDescription FROM sales")
+ 	ds16 <- data.table(merge(df16,ds16,by="folioID"))
+ 	ds16[,folioID:=NULL] # drop folioID
+ 	setnames(ds16,c("jurisdictionCode","rollNumber","conveyanceDate","conveyancePrice","conveyanceTypeDescription"),c("JURISDICTION_CODE","ROLL_NUMBER","CONVEYANCE_DATE","CONVEYANCE_PRICE","CONVEYANCE_TYPE_DESCRIPTION"))
+ 	print(ds16[1:10,CONVEYANCE_DATE])
+ 	ds16[,CONVEYANCE_DATE:=as.Date(CONVEYANCE_DATE,format="%Y-%m-%d")]
+ 	ds25[,FOLIO_ID:=NULL] # drop FOLIO_ID
+ 	ds25[,rollStart:=substring(ROLL_NUMBER,1,nchar(ROLL_NUMBER)-1)] # create rollStart
+ 	ds16[,in16:=1] # mark as in 2016
+ 	ds25[,in16:=0] # mark as not in 2016
+ 	print("namediff")
+ 	# only want stuff that had roll start in 2016
+ 	ds25 <- unique(rbind(ds25,ds16)) # note this procedure should allow duplexes as of 2025 -- but also note in 16 makes unique not happen
+ 	ds25[,max16:=max(in16),by=c("JURISDICTION_CODE","rollStart")]
+ 	ds25 <- ds25[max16==1] # keep only those with a 2016 data sale (know was single family use in 2016)
+ 	ds25[,max16:=NULL] # drop max16 now redundant
+ 	ds25[,in16:=NULL] # drop in16 now redundant
+ 	IMPROVEDONLY <- 0
+ 	if (IMPROVEDONLY==1) {
+ 		ds25 <- ds25[CONVEYANCE_TYPE_DESCRIPTION=="Improved Single Property Transaction"] # only keep improved single property transactions
+ 	} 
+ 	ds25[,CONVEYANCE_TYPE_DESCRIPTION:=NULL] # drop conveyance type description now redundant
+ 	ds25[,JURISDICTION_CODE:=as.numeric(JURISDICTION_CODE)]
+ 	print(d25[1:20,])
+ 	print(ds25[1:20,])
+ 	print(table(d25[,JURISDICTION_CODE]))
+ 	d25[,rollStart:=substring(ROLL_NUMBER,1,nchar(ROLL_NUMBER)-1)]
+ 	d25[,maxBuilt:=max(MB_Year_Built),by=c("JURISDICTION_CODE","rollStart")] # in case of e.g. duplexes
+ 	d25[,lastDigit:=substring(ROLL_NUMBER,nchar(ROLL_NUMBER),nchar(ROLL_NUMBER))]	
+ 	d25[,minLastDigit:=min(lastDigit),by=c("JURISDICTION_CODE","rollStart")]
+ 	d25 <- d25[lastDigit==minLastDigit] # keep only lowest digit of set in event multiple same year built
+ 	print(summary(d25))
+ 	d25 <- d25[MB_Year_Built == maxBuilt] # drop earlier of duplexes if any
+ 	setnames(ds25,"ROLL_NUMBER","rollSales") # rename roll number to rollSales
+ 	d25 <- merge(d25,ds25,by=c("JURISDICTION_CODE","rollStart")) # add sales data
+ 	print(summary(d25))
+ 	d25[,nRoll:=.N,by=rollStart]
+ 	print(table(d25[,nRoll]))
+ 
+ 	fwrite(d25,"data/derived/specHold25.csv")
+ 
+ }
> 
> d25 <- fread("data/derived/specHold25.csv")
> d25 <- unique(d25) # shouldn't be, but are duplicates (overlaps in sales data?)
> d25 <- d25[REGIONAL_DISTRICT=="Metro Vancouver",]
> #d25 <- d25[JURISDICTION_CODE==200,]
> 
> # how to observe prior sales?
> 
> PUNISHMENT <- 10^9
> print(PUNISHMENT)
[1] 1e+09
> # reshape to horizontal with dcast to see all three sales
> print(summary(d25))
 JURISDICTION_CODE  rollStart         ROLL_NUMBER          FOLIO_ID        
 Min.   :200.0     Length:915645      Length:915645      Length:915645     
 1st Qu.:221.0     Class :character   Class :character   Class :character  
 Median :311.0     Mode  :character   Mode  :character   Mode  :character  
 Mean   :285.8                                                             
 3rd Qu.:326.0                                                             
 Max.   :745.0                                                             
                                                                           
 ACTUAL_USE_DESCRIPTION REGIONAL_DISTRICT  MB_Year_Built     maxBuilt   
 Length:915645          Length:915645      Min.   :1877   Min.   :1877  
 Class :character       Class :character   1st Qu.:1966   1st Qu.:1966  
 Mode  :character       Mode  :character   Median :1984   Median :1984  
                                           Mean   :1980   Mean   :1980  
                                           3rd Qu.:1999   3rd Qu.:1999  
                                           Max.   :2024   Max.   :2024  
                                                                        
  lastDigit         minLastDigit       CONVEYANCE_DATE      CONVEYANCE_PRICE   
 Length:915645      Length:915645      Min.   :1902-04-30   Min.   :        0  
 Class :character   Class :character   1st Qu.:1993-08-27   1st Qu.:   200050  
 Mode  :character   Mode  :character   Median :2005-04-12   Median :   403000  
                                       Mean   :2003-09-16   Mean   :   683878  
                                       3rd Qu.:2014-03-12   3rd Qu.:   845000  
                                       Max.   :2025-03-12   Max.   :850000000  
                                                            NA's   :3915       
  rollSales             nRoll        
 Length:915645      Min.   :  1.000  
 Class :character   1st Qu.:  6.000  
 Mode  :character   Median :  6.000  
                    Mean   :  6.806  
                    3rd Qu.:  6.000  
                    Max.   :215.000  
                                     
> d25[,firstPost:=min(CONVEYANCE_DATE+PUNISHMENT*(year(CONVEYANCE_DATE) < MB_Year_Built)),by=c("JURISDICTION_CODE","rollStart")] # first sale post-construction but what if tie? see saleYearBuilt stuff
> d25[,saleYearBuilt:=year(CONVEYANCE_DATE)==MB_Year_Built]
> print(summary(d25[,length(unique(FOLIO_ID)),by=c("JURISDICTION_CODE","rollStart")])) # note this is correct, always 1, so equivalent
 JURISDICTION_CODE  rollStart               V1   
 Min.   :200.0     Length:303839      Min.   :1  
 1st Qu.:220.0     Class :character   1st Qu.:1  
 Median :311.0     Mode  :character   Median :1  
 Mean   :284.5                        Mean   :1  
 3rd Qu.:326.0                        3rd Qu.:1  
 Max.   :745.0                        Max.   :1  
> d25[,nSaleYearBuilt:=sum(saleYearBuilt),by="FOLIO_ID"]
> print(table(d25[,nSaleYearBuilt])) # how many sales in year built typically

     0      1      2      3      4      5      6      7      8      9     10 
702026 181815  30388   1109    158     23     31     10     36     20     29 
> d25[,lastSaleYearBuilt:=0]
> d25[nSaleYearBuilt>1,firstPost:=max(CONVEYANCE_DATE),by=c("FOLIO_ID")] # last sale in year built if multiple
> d25[,preDate:=as.Date("1600-01-01",format="%Y-%m-%d")] # last sale before year built
> d25[CONVEYANCE_DATE < firstPost, preDate:=CONVEYANCE_DATE] 
> d25[,lastPre:=max(preDate),by=FOLIO_ID]
> d25[,yfpost:=year(firstPost)]
> d25[,lastSale:=max(CONVEYANCE_DATE),by="FOLIO_ID"] # last sale date
> print(summary(d25))
 JURISDICTION_CODE  rollStart         ROLL_NUMBER          FOLIO_ID        
 Min.   :200.0     Length:915645      Length:915645      Length:915645     
 1st Qu.:221.0     Class :character   Class :character   Class :character  
 Median :311.0     Mode  :character   Mode  :character   Mode  :character  
 Mean   :285.8                                                             
 3rd Qu.:326.0                                                             
 Max.   :745.0                                                             
                                                                           
 ACTUAL_USE_DESCRIPTION REGIONAL_DISTRICT  MB_Year_Built     maxBuilt   
 Length:915645          Length:915645      Min.   :1877   Min.   :1877  
 Class :character       Class :character   1st Qu.:1966   1st Qu.:1966  
 Mode  :character       Mode  :character   Median :1984   Median :1984  
                                           Mean   :1980   Mean   :1980  
                                           3rd Qu.:1999   3rd Qu.:1999  
                                           Max.   :2024   Max.   :2024  
                                                                        
  lastDigit         minLastDigit       CONVEYANCE_DATE      CONVEYANCE_PRICE   
 Length:915645      Length:915645      Min.   :1902-04-30   Min.   :        0  
 Class :character   Class :character   1st Qu.:1993-08-27   1st Qu.:   200050  
 Mode  :character   Mode  :character   Median :2005-04-12   Median :   403000  
                                       Mean   :2003-09-16   Mean   :   683878  
                                       3rd Qu.:2014-03-12   3rd Qu.:   845000  
                                       Max.   :2025-03-12   Max.   :850000000  
                                                            NA's   :3915       
  rollSales             nRoll           firstPost             saleYearBuilt  
 Length:915645      Min.   :  1.000   Min.   :1942-11-15      Mode :logical  
 Class :character   1st Qu.:  6.000   1st Qu.:1989-03-13      FALSE:833960   
 Mode  :character   Median :  6.000   Median :1998-08-04      TRUE :81685    
                    Mean   :  6.806   Mean   :142874-12-26                   
                    3rd Qu.:  6.000   3rd Qu.:2008-01-16                     
                    Max.   :215.000   Max.   :2739923-12-26                  
                                                                             
 nSaleYearBuilt    lastSaleYearBuilt    preDate              lastPre          
 Min.   : 0.0000   Min.   :0         Min.   :1600-01-01   Min.   :1600-01-01  
 1st Qu.: 0.0000   1st Qu.:0         1st Qu.:1600-01-01   1st Qu.:1600-01-01  
 Median : 0.0000   Median :0         Median :1600-01-01   Median :1600-01-01  
 Mean   : 0.2705   Mean   :0         Mean   :1662-05-22   Mean   :1704-09-20  
 3rd Qu.: 0.0000   3rd Qu.:0         3rd Qu.:1600-01-01   3rd Qu.:1979-05-15  
 Max.   :10.0000   Max.   :0         Max.   :2025-02-28   Max.   :2025-02-28  
                                                                              
     yfpost           lastSale         
 Min.   :   1942   Min.   :1910-03-15  
 1st Qu.:   1989   1st Qu.:2007-06-29  
 Median :   1998   Median :2016-04-25  
 Mean   : 142874   Mean   :2013-03-29  
 3rd Qu.:   2008   3rd Qu.:2021-06-03  
 Max.   :2739923   Max.   :2025-03-12  
                                       
> d25[,spec:=yfpost < (MB_Year_Built+2)]
> #d25[,firstObs:=min(CONVEYANCE_DATE),by=FOLIO_ID] # first observation date
> d25[,firstObs:=min(CONVEYANCE_DATE),by=c("JURISDICTION_CODE","rollStart")] # first observation date
> print(table(d25[MB_Year_Built>2000 & (CONVEYANCE_DATE==firstObs),year(firstObs)]))

1947 1965 1967 1969 1970 1971 1972 1973 1974 1975 1976 1977 1978 1979 1980 1981 
   1    1    1    1    1    1    2    3  562  528  588  606  610  686  709  322 
1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993 1994 1995 1996 1997 
 487  644  491  609  667  835 1036 1168  777 1013 1162 1028  992  777  885  988 
1998 1999 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 
 862  851 1219 2427 3581 4499 4217 5000 4869 4151 3261 3407 3571 3415 2360 1812 
2014 2015 2016 
1899 1494  736 
> print(table(d25[MB_Year_Built>2000 & (CONVEYANCE_DATE==firstObs),year(firstObs)>=MB_Year_Built]))

FALSE  TRUE 
43794 28018 
> MAXPRE <- 6 # maximum number of years before year built to consider a spec builder, arbitraryish
> d25[,specStrict:= spec*(year(lastPre)>(MB_Year_Built-MAXPRE))] # spec if last sale before year built is less than MAXPRE years before year built
> d25[,specAlt:=spec*(yfpost==(MB_Year_Built+1) | month(firstPost)>6)] # alternative spec definition, if first sale after year built is one year after year built
> d25[,customStrict:=yfpost>(MB_Year_Built+1)]
> # strict definition -- pre-purchase not too long before built
> print(summary(d25[spec==1,max(MB_Year_Built-year(lastPre)),by=FOLIO_ID])) # how long before year built did they buy? should be 1 or 2 years
   FOLIO_ID               V1       
 Length:87556       Min.   : -1.0  
 Class :character   1st Qu.:  3.0  
 Mode  :character   Median :386.0  
                    Mean   :266.4  
                    3rd Qu.:400.0  
                    Max.   :416.0  
> print(table(d25[spec==1 & (CONVEYANCE_DATE==lastSale),MB_Year_Built-year(lastPre)])) # how long before year built did they buy? should be 1 or 2 years

   -1     0     1     2     3     4     5     6     7     8     9    10    11 
   10  3286 14989  2561  1184   850   665   542   529   436   385   334   307 
   12    13    14    15    16    17    18    19    20    21    22    23    24 
  294   243   230   211   174   127   141   119   112   101    86    74    92 
   25    26    27    28    29    30    31    32    33    34    35    36    37 
   85    76    83    56    70    43    44    42    36    39    40    20    27 
   38    39    40    41    42    43    44    45    46    47    48    49    50 
   19     9    17     9     8    11     8     5     5     6     3     4     1 
   69    71    90   370   371   372   373   374   375   376   377   378   379 
    1     1     1     1     1     4   620  1101  1015  1251  1046  1096  1330 
  380   381   382   383   384   385   386   387   388   389   390   391   392 
 1419   750   450  1252   831  1315  1717  2099  2439  2468  1223  1553  1777 
  393   394   395   396   397   398   399   400   401   402   403   404   405 
 1627  1658  1174  1571  1379  1016  1306  1044  1270  1717  2163  2065  2187 
  406   407   408   409   410   411   412   413   414   415   416 
 1834  1408  1550  1249  1690  1304   824   688   785   767    25 
> print(table(d25[spec==1 & (CONVEYANCE_DATE==lastSale) & (yfpost==MB_Year_Built),month(firstPost)])) # are these custom builds bought early in year?

   1    2    3    4    5    6    7    8    9   10   11   12 
4080 4272 5917 6989 6893 7415 6405 5924 4849 4583 4034 3424 
> print(d25[MB_Year_Built>2000 & (lastSale==CONVEYANCE_DATE),.(specShare=mean(spec)),by=MB_Year_Built][order(MB_Year_Built)])
    MB_Year_Built specShare
            <int>     <num>
 1:          2001 0.6317651
 2:          2002 0.6384224
 3:          2003 0.6642448
 4:          2004 0.6293412
 5:          2005 0.6789676
 6:          2006 0.6440641
 7:          2007 0.6193634
 8:          2008 0.6445450
 9:          2009 0.6691048
10:          2010 0.6291676
11:          2011 0.5877707
12:          2012 0.5134982
13:          2013 0.5096218
14:          2014 0.5742513
15:          2015 0.5320140
16:          2016 0.3218218
17:          2017 0.2286443
18:          2018 0.2148417
19:          2019 0.2200128
20:          2020 0.2771784
21:          2021 0.2835017
22:          2022 0.2302632
23:          2023 0.2475172
24:          2024 0.1681305
    MB_Year_Built specShare
> print(d25[MB_Year_Built>2000 & (lastSale==CONVEYANCE_DATE),.(specShare=mean(specStrict)),by=MB_Year_Built][order(MB_Year_Built)])
    MB_Year_Built  specShare
            <int>      <num>
 1:          2001 0.13724797
 2:          2002 0.13969466
 3:          2003 0.14222809
 4:          2004 0.15344138
 5:          2005 0.15078107
 6:          2006 0.21220101
 7:          2007 0.22042440
 8:          2008 0.22549020
 9:          2009 0.20619993
10:          2010 0.19913813
11:          2011 0.18853503
12:          2012 0.20204604
13:          2013 0.20802920
14:          2014 0.25007718
15:          2015 0.24912689
16:          2016 0.20270270
17:          2017 0.15724607
18:          2018 0.13440581
19:          2019 0.15009622
20:          2020 0.16680498
21:          2021 0.15420875
22:          2022 0.10020243
23:          2023 0.10084034
24:          2024 0.07904642
    MB_Year_Built  specShare
> print(d25[MB_Year_Built>2000 & (lastSale==CONVEYANCE_DATE),.(specShare=mean(specAlt)),by=MB_Year_Built][order(MB_Year_Built)])
    MB_Year_Built specShare
            <int>     <num>
 1:          2001 0.4205872
 2:          2002 0.3506361
 3:          2003 0.3989432
 4:          2004 0.3750789
 5:          2005 0.4222323
 6:          2006 0.3875357
 7:          2007 0.3864721
 8:          2008 0.3951735
 9:          2009 0.5141066
10:          2010 0.2907689
11:          2011 0.2858599
12:          2012 0.2495027
13:          2013 0.3015926
14:          2014 0.3362149
15:          2015 0.3291618
16:          2016 0.1466466
17:          2017 0.1415215
18:          2018 0.1297353
19:          2019 0.1680564
20:          2020 0.1900415
21:          2021 0.1703704
22:          2022 0.1599190
23:          2023 0.1772345
24:          2024 0.0727729
    MB_Year_Built specShare
> print(d25[(JURISDICTION_CODE==200) & MB_Year_Built>2000 & (lastSale==CONVEYANCE_DATE),.(specShare=mean(specAlt)),by=MB_Year_Built][order(MB_Year_Built)]) # Vancouver
    MB_Year_Built specShare
            <int>     <num>
 1:          2001 0.3647913
 2:          2002 0.2611850
 3:          2003 0.3253589
 4:          2004 0.2972973
 5:          2005 0.3192869
 6:          2006 0.2550725
 7:          2007 0.2362525
 8:          2008 0.2982732
 9:          2009 0.3012704
10:          2010 0.1446453
11:          2011 0.1612565
12:          2012 0.1715527
13:          2013 0.1879795
14:          2014 0.1989101
15:          2015 0.2091153
16:          2016 0.1480804
17:          2017 0.1243386
18:          2018 0.1118012
19:          2019 0.1801126
20:          2020 0.2398990
21:          2021 0.2443532
22:          2022 0.2566225
23:          2023 0.2988506
24:          2024 0.1032448
    MB_Year_Built specShare
> print(d25[MB_Year_Built>2000 & (lastSale==CONVEYANCE_DATE),.(specShare=1-mean(customStrict)),by=MB_Year_Built][order(MB_Year_Built)])
    MB_Year_Built specShare
            <int>     <num>
 1:          2001 0.6317651
 2:          2002 0.6384224
 3:          2003 0.6642448
 4:          2004 0.6293412
 5:          2005 0.6789676
 6:          2006 0.6440641
 7:          2007 0.6193634
 8:          2008 0.6445450
 9:          2009 0.6691048
10:          2010 0.6291676
11:          2011 0.5877707
12:          2012 0.5134982
13:          2013 0.5096218
14:          2014 0.5742513
15:          2015 0.5320140
16:          2016 0.3218218
17:          2017 0.2286443
18:          2018 0.2148417
19:          2019 0.2200128
20:          2020 0.2771784
21:          2021 0.2835017
22:          2022 0.2302632
23:          2023 0.2475172
24:          2024 0.1681305
    MB_Year_Built specShare
> q("no")
> proc.time()
   user  system elapsed 
  9.113   0.330   9.473 
