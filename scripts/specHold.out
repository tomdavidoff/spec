
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # specHold.R 
> # how long to spec builders hold properties?
> # Also, when do they buy?
> # Tom Davidoff
> # 06/04/25
> # Modified as mergeRoll20052025.R does a lot
> 
> # Steps:
> # 1. do mergeRoll20052025.R to get homes built after 2005 and their 2005 characterstics
> # 2. Do this script and get sales for each property
> # 3. Merge the sales data with the 2005 data and learn about spec vs custom
> 
> library(data.table)
> library(fixest)	
> library(RSQLite)
> library(ggplot2)
> 
> # get dates of construction for single family homes 
> # see if roll number ends in zero and no other by lot start works
> 
> # obtain static year built
> 
> DOCOMPILE <- FALSE
> 
> if (DOCOMPILE==TRUE) {
+ 	dd25 <- fread("~/OneDrive\ -\ UBC/Documents/data/bca/data_advice_REVD25_20250331/bca_folio_descriptions_20250331_REVD25.csv",select=c("JURISDICTION_CODE","ROLL_NUMBER","FOLIO_ID","ACTUAL_USE_DESCRIPTION","REGIONAL_DISTRICT"),colClasses=c(ROLL_NUMBER="character"))
+ 	dd25 <- dd25[REGIONAL_DISTRICT=="Metro Vancouver"] # drop empty regional districts
+ 	dj25 <- unique(dd25[,.(JURISDICTION_CODE,ROLL_NUMBER,FOLIO_ID)]) # for sales data uniformity
+ 	names(dj25) <- c("JURISDICTION_CODE","ROLL_NUMBER","FOLIO_ID")
+ 
+ 	ds25 <- fread("~/OneDrive - UBC/Documents/data/bca/data_advice_REVD25_20250331/bca_folio_sales_20250331_REVD25.csv",select=c("FOLIO_ID","CONVEYANCE_DATE","CONVEYANCE_PRICE","CONVEYANCE_TYPE_DESCRIPTION"),colClasses=c(CONVEYANCE_DATE="character"))
+ 	# convert folioID to jurisdiction/roll_number as pre-redevelopment sales will have often same jurisd/roll_number, different FOLIO_ID. Certainly same rollStart
+ 	ds25[,CONVEYANCE_DATE:=as.Date(CONVEYANCE_DATE,format="%Y%m%d%H%M%S")]
+ 	ds25 <- merge(ds25,dj25,by="FOLIO_ID") # add jurisdiction code and roll number
+ 
+ 	# Now get 2016 data
+ 	db16 <- dbConnect(RSQLite::SQLite(), "~/OneDrive - UBC/Documents/data/bca/REVD16_and_inventory_extracts.sqlite3")
+ 	df16 <- dbGetQuery(db16, "SELECT folioID, jurisdictionCode, rollNumber FROM folio") 
+ 		ds16 <- dbGetQuery(db16, "SELECT folioID, conveyanceDate, conveyancePrice, conveyanceTypeDescription FROM sales")
+ 	ds16 <- data.table(merge(df16,ds16,by="folioID"))
+ 	setnames(ds16,"folioID","FOLIO_ID") # rename folioID to FOLIO_ID
+ 	setnames(ds16,c("jurisdictionCode","rollNumber","conveyanceDate","conveyancePrice","conveyanceTypeDescription"),c("JURISDICTION_CODE","ROLL_NUMBER","CONVEYANCE_DATE","CONVEYANCE_PRICE","CONVEYANCE_TYPE_DESCRIPTION"))
+ 	ds16[,CONVEYANCE_DATE:=as.Date(CONVEYANCE_DATE,format="%Y-%m-%d")]
+ 
+ 	ds1625 <- rbind(ds25,ds16) # note this procedure should allow duplexes as of 2025; note can't make unique here as "" and ,, same
+ 	fwrite(ds1625,"data/derived/sales20162025.csv") # save sales data
+ }
> ds <- fread("data/derived/sales20162025.csv")
> ds <- unique(ds[,.(FOLIO_ID,CONVEYANCE_DATE,CONVEYANCE_PRICE,ROLL_NUMBER) ]) # remove duplicates with different conveyanceTypeDescription, see inside construction loop
> db <- fread("data/derived/newBuilds.csv")
> setkey(ds,FOLIO_ID)
> setkey(db,FOLIO_ID)
> # identify duplicates
> print(ds[duplicated(ds),]) # should be none
Key: <FOLIO_ID>
Empty data.table (0 rows and 4 cols): FOLIO_ID,CONVEYANCE_DATE,CONVEYANCE_PRICE,ROLL_NUMBER
> print(db[duplicated(db) ,]) # should be none
Key: <FOLIO_ID>
Empty data.table (0 rows and 7 cols): Jurisdiction,Roll_Number,MB_Year_Built,year_built,value_stru05,value_land05...
> print(head(ds))
Key: <FOLIO_ID>
     FOLIO_ID CONVEYANCE_DATE CONVEYANCE_PRICE     ROLL_NUMBER
       <char>          <IDat>            <num>          <char>
1: A000000009      2019-04-05         17309000 001019632060000
2: A000000009      2014-06-16          9450000 001019632060000
3: A000000009      2014-06-05                1 001019632060000
4: A000000009      1988-11-01           800000 001019632060000
5: A00000000A      2013-02-08          8800000 001019632290000
6: A00000000A      1991-07-09          1700000 001019632290000
> print(head(db))
Key: <FOLIO_ID>
   Jurisdiction     Roll_Number MB_Year_Built year_built value_stru05
          <int>          <char>         <int>      <int>        <int>
1:          200 001019632290000          1915       1915       989000
2:          200 001019632450000          1945       1945        20200
3:          200 001019632650000          2008       1952       142000
4:          200 001019632760000          2022       1976       934000
5:          200 001019635070000          1937       1937       518000
6:          200 001019635170000          1925       1925       478000
   value_land05   FOLIO_ID
          <int>     <char>
1:      2698000 A00000000A
2:      2623000 A00000000B
3:      2623000 A00000000C
4:      2913000 A00000000D
5:      2363000 A00000000E
6:      3542000 A00000000F
> ds[,rollNumeric:=as.numeric(ROLL_NUMBER)] # convert roll number to numeric
Warning message:
In eval(jsub, SDenv, parent.frame()) : NAs introduced by coercion
> db[,rollNumeric:=as.numeric(Roll_Number)] # convert roll number to numeric
Warning message:
In eval(jsub, SDenv, parent.frame()) : NAs introduced by coercion
> print(db[duplicated(FOLIO_ID)& MB_Year_Built>2005,])  # these appear to be assemblies and rarely built post-2005
Key: <FOLIO_ID>
    Jurisdiction Roll_Number MB_Year_Built year_built value_stru05 value_land05
           <int>      <char>         <int>      <int>        <int>        <int>
 1:          524    00009116          2006       2001       147000        80100
 2:          524    00009116          2006       2003       162000        84200
 3:          524    00009116          2006       2002       143000        81700
 4:          524    00009116          2006       2000       141000        81700
 5:          524    00009116          2006       2001       164000        81700
 6:          524    00009117          2006       2001       147000        80100
 7:          524    00009117          2006       2003       162000        84200
 8:          524    00009117          2006       2002       143000        81700
 9:          524    00009117          2006       2000       141000        81700
10:          524    00009117          2006       2001       164000        81700
11:          746    06917175          2006       1994        98100       181000
12:          224   583060002          2023       1977        65300       216000
13:          305    12150036          2014       1978        38700       217000
14:          305    12150036          2014       1978        66900       218000
15:          305    12150036          2014       1978        52300       220000
16:          305    12150036          2014       1978        64100       222000
17:          305    12150036          2014       1980        49400       222000
18:          305    12150036          2014       1978        45600       222000
19:          305    12150036          2014       1978        48400       233000
20:          305    12150036          2014       1978        51400       227000
21:          305    12150036          2014       1978        44200       217000
22:          305    12150037          2014       1978        38700       217000
23:          305    12150037          2014       1978        66900       218000
24:          305    12150037          2014       1978        52300       220000
25:          305    12150037          2014       1978        64100       222000
26:          305    12150037          2014       1980        49400       222000
27:          305    12150037          2014       1978        45600       222000
28:          305    12150037          2014       1978        48400       233000
29:          305    12150037          2014       1978        51400       227000
30:          305    12150037          2014       1978        44200       217000
31:          303   091346198          2017       1947        64700        89600
32:          303   091346198          2017       1940        67100        90200
33:          319     0007001          2019       1983       118000       210000
34:          319     0007001          2019       1983       129000       210000
35:          319     0007001          2019       1983       114000       210000
36:          319     0007001          2019       1984       114000       210000
37:          319     0007001          2019       1986       124000       189000
38:          319     0007001          2019       1986       116000       189000
39:          319     0007001          2019       1985       104000       189000
40:          319     0176020          2024       1972        66100       205000
41:          319     0176020          2024       1972       102000       210000
42:          319     0176020          2024       1972        71500       210000
43:          319     0176020          2024       1971       103000       210000
44:          319     0176020          2024       1972        63000       210000
45:          319     0176020          2024       1972        76800       210000
46:          319     0176020          2024       1972       105000       210000
47:          319     1083051          2018       1975        94600       196000
48:          319     1083051          2018       1975       100000       196000
49:          319     1083051          2018       1978       100000       196000
50:          319     1083051          2018       1975       103000       196000
51:          319     1083051          2018       1978        97100       196000
52:          319     1083051          2018       1978        93600       196000
53:          319     1083051          2018       1978        98100       196000
54:          319     1083051          2018       1978       120000       196000
55:          319     1083051          2018       1978       107000       196000
56:          303   058245141          2011       1992       145000       100000
57:          303   058245141          2011       1992       140000        95000
58:          303   058245142          2011       1992       145000       100000
59:          303   058245142          2011       1992       140000        95000
60:          305    20974003          2013       1965        70600       266000
61:          305    20974004          2013       1965        70600       266000
62:          319     0040005          2014       1989       145000       216000
63:          319     0040005          2014       1989       173000       220000
64:          319     0040006          2014       1989       145000       216000
65:          319     0040006          2014       1989       173000       220000
66:          319     0211003          2014       1972        67700       225000
67:          319     0211004          2014       1972        67700       225000
68:          319     0040853          2015       1991       143000       210000
69:          319     0040854          2015       1991       143000       210000
70:          319     0102073          2017       1973        75300       210000
71:          319     0102073          2017       1973        84500       205000
72:          319     0102074          2017       1973        75300       210000
73:          319     0102074          2017       1973        84500       205000
74:          303   095745802          2021       1907        50400        89900
75:          303   095745803          2021       1907        50400        89900
76:          319     0177019          2022       1970        75600       210000
77:          319     0177019          2022       1970        83900       210000
78:          319     0177019          2022       1971        90000       210000
79:          319     0177019          2022       1970        79700       210000
80:          319     0177019          2022       1971        75600       210000
    Jurisdiction Roll_Number MB_Year_Built year_built value_stru05 value_land05
      FOLIO_ID rollNumeric
        <char>       <num>
 1: A00002A0JJ        9116
 2: A00002A0JJ        9116
 3: A00002A0JJ        9116
 4: A00002A0JJ        9116
 5: A00002A0JJ        9116
 6: A00002A0JK        9117
 7: A00002A0JK        9117
 8: A00002A0JK        9117
 9: A00002A0JK        9117
10: A00002A0JK        9117
11: A00002AK5B     6917175
12: A00003V641   583060002
13: A00003XF02    12150036
14: A00003XF02    12150036
15: A00003XF02    12150036
16: A00003XF02    12150036
17: A00003XF02    12150036
18: A00003XF02    12150036
19: A00003XF02    12150036
20: A00003XF02    12150036
21: A00003XF02    12150036
22: A00003XF03    12150037
23: A00003XF03    12150037
24: A00003XF03    12150037
25: A00003XF03    12150037
26: A00003XF03    12150037
27: A00003XF03    12150037
28: A00003XF03    12150037
29: A00003XF03    12150037
30: A00003XF03    12150037
31: A0000F4DB8    91346198
32: A0000F4DB8    91346198
33: A0000F7JDQ        7001
34: A0000F7JDQ        7001
35: A0000F7JDQ        7001
36: A0000F7JDQ        7001
37: A0000F7JDQ        7001
38: A0000F7JDQ        7001
39: A0000F7JDQ        7001
40: A0000F7LAW      176020
41: A0000F7LAW      176020
42: A0000F7LAW      176020
43: A0000F7LAW      176020
44: A0000F7LAW      176020
45: A0000F7LAW      176020
46: A0000F7LAW      176020
47: A0000F7NNJ     1083051
48: A0000F7NNJ     1083051
49: A0000F7NNJ     1083051
50: A0000F7NNJ     1083051
51: A0000F7NNJ     1083051
52: A0000F7NNJ     1083051
53: A0000F7NNJ     1083051
54: A0000F7NNJ     1083051
55: A0000F7NNJ     1083051
56: D0000FJQ04    58245141
57: D0000FJQ04    58245141
58: D0000FJQ06    58245142
59: D0000FJQ06    58245142
60: D0000QAL93    20974003
61: D0000QALAA    20974004
62: D0000U3KWX       40005
63: D0000U3KWX       40005
64: D0000U3KWZ       40006
65: D0000U3KWZ       40006
66: D0000W4VCU      211003
67: D0000W4VCW      211004
68: D00010PF20       40853
69: D00010PF22       40854
70: D00013SMLW      102073
71: D00013SMLW      102073
72: D00013SMLY      102074
73: D00013SMLY      102074
74: D0001VKKZX    95745802
75: D0001VKKZZ    95745803
76: J00000BX4V      177019
77: J00000BX4V      177019
78: J00000BX4V      177019
79: J00000BX4V      177019
80: J00000BX4V      177019
      FOLIO_ID rollNumeric
> db <- db[duplicated(FOLIO_ID)==FALSE ] # drop duplicates, keep only those built before 2005
> df <- merge(ds,db)
> print(head(df))
Key: <FOLIO_ID>
     FOLIO_ID CONVEYANCE_DATE CONVEYANCE_PRICE     ROLL_NUMBER rollNumeric.x
       <char>          <IDat>            <num>          <char>         <num>
1: A00000000A      2013-02-08          8800000 001019632290000  1.019632e+12
2: A00000000A      1991-07-09          1700000 001019632290000  1.019632e+12
3: A00000000B      2006-12-04          3850000 001019632450000  1.019632e+12
4: A00000000B      2006-10-04          2910000 001019632450000  1.019632e+12
5: A00000000B      1977-04-15           190000 001019632450000  1.019632e+12
6: A00000000C      2021-09-10         14000000 001019632650000  1.019633e+12
   Jurisdiction     Roll_Number MB_Year_Built year_built value_stru05
          <int>          <char>         <int>      <int>        <int>
1:          200 001019632290000          1915       1915       989000
2:          200 001019632290000          1915       1915       989000
3:          200 001019632450000          1945       1945        20200
4:          200 001019632450000          1945       1945        20200
5:          200 001019632450000          1945       1945        20200
6:          200 001019632650000          2008       1952       142000
   value_land05 rollNumeric.y
          <int>         <num>
1:      2698000  1.019632e+12
2:      2698000  1.019632e+12
3:      2623000  1.019632e+12
4:      2623000  1.019632e+12
5:      2623000  1.019632e+12
6:      2623000  1.019633e+12
> 
> # get maximal transaction date on or before year built, then minimal after that transaction
> df[,conveyanceDateContinuous:=year(CONVEYANCE_DATE) + (month(CONVEYANCE_DATE)-1)/12 + mday(CONVEYANCE_DATE-1)/365.25] # convert to continuous date
> df[,soldBuilt:= year(CONVEYANCE_DATE)==MB_Year_Built]
> # create the maximal and minimal dates conditional on soldBuilt within FOLIO_ID, set to zero if none
> df[,nIn:=sum(soldBuilt),by=FOLIO_ID] # number of sales in year built
> df[,maxIn:=max(conveyanceDateContinuous*soldBuilt),by=FOLIO_ID] # max conveyance date in year built
> df[,minIn:=min(conveyanceDateContinuous*soldBuilt+100000*(1-soldBuilt)),by=FOLIO_ID] # min conveyance date in year built
> df[,maxPre:=max(conveyanceDateContinuous*(year(CONVEYANCE_DATE)<=MB_Year_Built)),by=FOLIO_ID] # max conveyance date before year built
> df[nIn>1, maxPre:=minIn] # if multiple sales in year built, set maxPre to the minimal
> df[,minPost:=min(conveyanceDateContinuous+3000*(year(CONVEYANCE_DATE)<MB_Year_Built )),by=FOLIO_ID] # can be same as maxPre
> df[nIn>1, minPost:=maxIn] # if sales in year built, set minPost to maxIn
> # handle minPost==maxPre.
> print(df[nIn>1 & minPost==maxPre,.(FOLIO_ID,MB_Year_Built,CONVEYANCE_DATE,CONVEYANCE_PRICE,nIn,maxPre,minPost,minIn,maxIn,ROLL_NUMBER)])
Key: <FOLIO_ID>
       FOLIO_ID MB_Year_Built CONVEYANCE_DATE CONVEYANCE_PRICE   nIn   maxPre
         <char>         <int>          <IDat>            <num> <int>    <num>
  1: A000001F2W          2012      2020-10-01          2780000     2 2012.415
  2: A000001F2W          2012      2016-06-28          2900000     2 2012.415
  3: A000001F2W          2012      2012-05-31           562500     2 2012.415
  4: A000001F2W          2012      2012-05-31          1125000     2 2012.415
  5: A000001JHW          1987      2000-10-20           547000     2 1987.275
 ---                                                                         
418: A0000F7SEJ          1978      1978-04-15            74000     2 1978.288
419: A0000F7SEJ          1978      1978-04-15            20500     2 1978.288
420: A0000F7UXK          2005      2006-06-16           427969     2 2005.383
421: A0000F7UXK          2005      2005-05-19           541667     2 2005.383
422: A0000F7UXK          2005      2005-05-19            40625     2 2005.383
      minPost    minIn    maxIn     ROLL_NUMBER
        <num>    <num>    <num>          <char>
  1: 2012.415 2012.415 2012.415 012123825460000
  2: 2012.415 2012.415 2012.415 012123825460000
  3: 2012.415 2012.415 2012.415 012123825460000
  4: 2012.415 2012.415 2012.415 012123825460000
  5: 1987.275 1987.275 1987.275 012824165170000
 ---                                           
418: 1978.288 1978.288 1978.288      6141072101
419: 1978.288 1978.288 1978.288      6141072101
420: 2005.383 2005.383 2005.383      6154021707
421: 2005.383 2005.383 2005.383      6154021707
422: 2005.383 2005.383 2005.383      6154021707
> df[,structureShare:= value_stru05/(value_stru05+value_land05)] # share of structure value in 2005
> print(summary(df[MB_Year_Built>2005,])) 
   FOLIO_ID         CONVEYANCE_DATE      CONVEYANCE_PRICE   ROLL_NUMBER       
 Length:69318       Min.   :1965-11-15   Min.   :       0   Length:69318      
 Class :character   1st Qu.:1997-10-28   1st Qu.:  233060   Class :character  
 Mode  :character   Median :2008-09-16   Median :  520000   Mode  :character  
                    Mean   :2006-03-20   Mean   : 1003691                     
                    3rd Qu.:2015-09-10   3rd Qu.: 1331000                     
                    Max.   :2025-03-12   Max.   :29480000                     
                                         NA's   :157                          
 rollNumeric.x        Jurisdiction   Roll_Number        MB_Year_Built 
 Min.   :1.006e+03   Min.   :200.0   Length:69318       Min.   :2006  
 1st Qu.:5.084e+09   1st Qu.:200.0   Class :character   1st Qu.:2011  
 Median :7.010e+10   Median :301.0   Mode  :character   Median :2015  
 Mean   :4.892e+12   Mean   :274.2                      Mean   :2015  
 3rd Qu.:6.794e+12   3rd Qu.:326.0                      3rd Qu.:2019  
 Max.   :2.584e+13   Max.   :775.0                      Max.   :2024  
 NA's   :17                                                           
   year_built    value_stru05      value_land05     rollNumeric.y      
 Min.   :1900   Min.   :      0   Min.   :  18000   Min.   :1.006e+03  
 1st Qu.:1944   1st Qu.:  21700   1st Qu.: 246000   1st Qu.:5.084e+09  
 Median :1954   Median :  41500   Median : 339000   Median :7.010e+10  
 Mean   :1953   Mean   :  58376   Mean   : 397741   Mean   :4.892e+12  
 3rd Qu.:1965   3rd Qu.:  71400   3rd Qu.: 467000   3rd Qu.:6.794e+12  
 Max.   :2004   Max.   :2045000   Max.   :5353000   Max.   :2.584e+13  
 NA's   :85     NA's   :3         NA's   :3         NA's   :17         
 conveyanceDateContinuous soldBuilt            nIn            maxIn       
 Min.   :1966             Mode :logical   Min.   :0.000   Min.   :   0.0  
 1st Qu.:1998             FALSE:64938     1st Qu.:0.000   1st Qu.:   0.0  
 Median :2009             TRUE :4380      Median :0.000   Median :   0.0  
 Mean   :2006                             Mean   :0.221   Mean   : 416.6  
 3rd Qu.:2016                             3rd Qu.:0.000   3rd Qu.:   0.0  
 Max.   :2025                             Max.   :3.000   Max.   :2025.0  
                                                                          
     minIn            maxPre        minPost     structureShare   
 Min.   :  2006   Min.   :   0   Min.   :2006   Min.   :0.00000  
 1st Qu.:100000   1st Qu.:2007   1st Qu.:2016   1st Qu.:0.05263  
 Median :100000   Median :2013   Median :2022   Median :0.10409  
 Mean   : 79729   Mean   :1950   Mean   :3249   Mean   :0.13058  
 3rd Qu.:100000   3rd Qu.:2017   3rd Qu.:4989   3rd Qu.:0.18293  
 Max.   :100000   Max.   :2025   Max.   :5018   Max.   :0.81025  
                                                NA's   :3        
> dNew <- unique(df[MB_Year_Built>2005,.(maxPre=maxPre,minPost=minPost,MB_Year_Built=max(MB_Year_Built),structureShare,maxIn,minIn,nIn),by=FOLIO_ID])
> print(head(dNew))
Key: <FOLIO_ID>
     FOLIO_ID   maxPre  minPost MB_Year_Built structureShare maxIn minIn   nIn
       <char>    <num>    <num>         <int>          <num> <num> <num> <int>
1: A00000000C 1991.672 2021.691          2008     0.05135624     0 1e+05     0
2: A00000000D 2006.574 4975.038          2022     0.24278659     0 1e+05     0
3: A00000001Q 2016.622 4979.455          2019     0.26142132     0 1e+05     0
4: A000000023 1987.419 4987.419          2010     0.04285445     0 1e+05     0
5: A00000002T 1997.415 2023.758          2013     0.02159205     0 1e+05     0
6: A00000003G 2005.574 2021.436          2008     0.14251781     0 1e+05     0
> SPECDELTA <- 1 #1 vs 2 vs 3 appears little diff on structureShare results
> dNew[,spec:=(floor(minPost)<=(MB_Year_Built+SPECDELTA))] # spec if first sale after year built is one year after year built
> MAXHOLD <- 4 # maximum number of years before year built to consider a spec builder, arbitraryish, but see spec distro, 49-25 then flat
> MAXHOLDEXTRA <- 1
> dNew[,specStrict:=spec & (maxPre>=(MB_Year_Built-MAXHOLD)) & (maxPre<minPost)] # spec if last sale before year built is less than MAXHOLD years before year built also different sale dates
> dNew[,specStrictExtra:=spec & (maxPre>=(MB_Year_Built-MAXHOLDEXTRA)) & (maxPre<minPost)] # spec if last sale before year built is less than MAXHOLD years before year built also different sale dates
> print(table(dNew[,.(spec,nIn)]))
       nIn
spec        0     1     2     3
  FALSE 14932     0     0     0
  TRUE   2256  3845   254     9
> print(table(dNew[,.(spec,floor(maxPre)-MB_Year_Built)]))
       V2
spec    -2024 -2023 -2022 -2021 -2020 -2019 -2018 -2017 -2016 -2015 -2014 -2013
  FALSE     0    14   116    73    23    24    13    21    17    14    11    12
  TRUE     14   118   120    59    53    33    27    23    11    29    32    25
       V2
spec    -2012 -2011 -2010 -2009 -2008 -2007 -2006  -47  -46  -45  -44  -43  -41
  FALSE    23    24    21    18    38    29    51    1    3    2    2    2    5
  TRUE     37    26    36    21    31    28    30    0    0    0    0    0    1
       V2
spec     -40  -39  -38  -37  -36  -35  -34  -33  -32  -31  -30  -29  -28  -27
  FALSE    7   12   13   12   13   24   32   25   27   34   37   39   41   53
  TRUE     0    0    0    0    0    2    0    1    1    2    0    3    2    4
       V2
spec     -26  -25  -24  -23  -22  -21  -20  -19  -18  -17  -16  -15  -14  -13
  FALSE   51   71   79   79   83  108  111  124  133  172  188  200  251  261
  TRUE     3    5    2    8    5    7    4    7    4    5    9   13   11    9
       V2
spec     -12  -11  -10   -9   -8   -7   -6   -5   -4   -3   -2   -1    0
  FALSE  295  325  323  355  428  503  519  586  696 1019 2079 4967    0
  TRUE    10    8    9   13   21   27   25   29   49   99  246  859 4108
> print(table(dNew[,.(specStrict,floor(maxPre)-MB_Year_Built)]))
          V2
specStrict -2024 -2023 -2022 -2021 -2020 -2019 -2018 -2017 -2016 -2015 -2014
     FALSE    14   132   236   132    76    57    40    44    28    43    43
     TRUE      0     0     0     0     0     0     0     0     0     0     0
          V2
specStrict -2013 -2012 -2011 -2010 -2009 -2008 -2007 -2006  -47  -46  -45  -44
     FALSE    37    60    50    57    39    69    57    81    1    3    2    2
     TRUE      0     0     0     0     0     0     0     0    0    0    0    0
          V2
specStrict  -43  -41  -40  -39  -38  -37  -36  -35  -34  -33  -32  -31  -30
     FALSE    2    6    7   12   13   12   13   26   32   26   28   36   37
     TRUE     0    0    0    0    0    0    0    0    0    0    0    0    0
          V2
specStrict  -29  -28  -27  -26  -25  -24  -23  -22  -21  -20  -19  -18  -17
     FALSE   42   43   57   54   76   81   87   88  115  115  131  137  177
     TRUE     0    0    0    0    0    0    0    0    0    0    0    0    0
          V2
specStrict  -16  -15  -14  -13  -12  -11  -10   -9   -8   -7   -6   -5   -4
     FALSE  197  213  262  270  305  333  332  368  449  530  544  615  696
     TRUE     0    0    0    0    0    0    0    0    0    0    0    0   49
          V2
specStrict   -3   -2   -1    0
     FALSE 1019 2079 4967 3859
     TRUE    99  246  859  249
> print(summary(dNew[spec==1 & specStrict==0,structureShare]))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04444 0.08584 0.11366 0.15785 0.64998 
> print(summary(dNew[specStrict==1 & specStrictExtra==0,structureShare]))
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
0.008547 0.054710 0.099432 0.123068 0.168905 0.562201 
> print(summary(dNew[specStrictExtra==1,structureShare]))
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
0.002611 0.047041 0.084941 0.110088 0.153596 0.573226 
> print(summary(dNew[spec==0,structureShare]))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's 
0.00000 0.05401 0.10682 0.13456 0.18910 0.81025       1 
> 
> # problem diagnostic
> df[, yr := year(CONVEYANCE_DATE)]
> lateSpecs <- df[, .(
+   nIn = sum(yr == MB_Year_Built),
+   soldNextYr = any(yr == MB_Year_Built + 1)
+ ), by = FOLIO_ID][nIn == 0 & soldNextYr == TRUE]
> 
> nrow(lateSpecs)  # how many are being missed?
[1] 19342
> table(is.na(dNew$minPost), dNew$nIn)
       
            0     1     2     3
  FALSE 17188  3845   254     9
> 
> q("no")
> proc.time()
   user  system elapsed 
  9.196   0.314   9.538 
